- name: Install Emacs Wayland from Git
  hosts: localhost
  vars:
    ver: '{{version | default("pgtk-nativecomp") }}'
    src: '{{ansible_env.HOME}}/src'
  tasks:

  - name: Print Ansible Distribution Name
    debug:
      msg: "OS Version: {{ansible_distribution}}"

  - name: add Ubuntu src repositories
    become: yes
    apt_repository:
      repo: deb-src http://gb.archive.ubuntu.com/ubuntu {{ansible_distribution_release}} main restricted universe multiverse
      state: present
    when: ansible_distribution|lower == 'ubuntu' or ansible_distribution == 'KDE neon'

  - name: Install apt build dependencies
    become: yes
    apt:
      update_cache: yes
      pkg: emacs
      state: build-dep
    when:
      - ansible_pkg_mgr == 'apt'

  - name: Install apt run dependencies
    become: yes
    apt:
      update_cache: yes
      pkg:
        - aspell
        - aspell-en
        - aspell-uk
        - espeak
        - hunspell
        - imagemagick
        - ispell
        - libgccjit0
        - libgccjit-10-dev
        - texlive
        - texlive-latex-extra
    when:
      - ansible_pkg_mgr == 'apt'

  - name: Install dnf build dependancies
    become: yes
    command:
      dnf builddep -y emacs
    args:
      warn: false
    register: dnf_result
    when:
      - ansible_pkg_mgr == 'dnf'
    changed_when: '"Nothing to do" not in dnf_result.stdout'

  - name: Installing dnf run dependencies
    become: yes
    dnf:
      update_cache: yes
      name:
        - aspell-en
        - hunspell-en-GB
        - ImageMagick
        - libgccjit
        - libgccjit-devel
        - texlive-scheme-basic
      state: latest
      install_weak_deps: false
    when: ansible_pkg_mgr == 'dnf'

  - name: Install pacman build and run dependancies
    become: yes
    pacman:
      name:
        - aspell
        - aspell-en
        - aspell-uk
        - jansson
        - libotf
        - m17n-db
        - m17n-lib
        - alsa-lib
        - cairo
        - dbus
        - giflib
        - git
        - gnutls
        - gpm
        - gtk2
        - gtk3
        - harfbuzz
        - hicolor-icon-theme
        - imagemagick
        - lcms2
        - libjpeg-turbo
        - librsvg
        - libxfixes
        - libxinerama
        - libxml2
        - texlive-bin
        - texlive-core
        - texlive-latexextra
        - webkit2gtk
        - xaw3d
        - xorgproto
      state: latest
    when: ansible_pkg_mgr == 'pacman'

  - name: Clone Emacs {{ver}} branch
    git:
      repo: https://github.com/flatwhatson/emacs
      version: '{{ver}}'
      dest: '{{src}}/emacs-{{ver}}'
      accept_hostkey: yes

  - name: Run autogen.sh
    command: ./autogen.sh chdir={{src}}/emacs-{{ver}}

  - name: Run configure
    command: >
      ./configure chdir={{src}}/emacs-{{ver}}
      --without-ns
      --without-x
      --with-modules
      --with-native-compilation
      --with-pgtk

  - name: Get number of available cores
    shell: nproc
    register: nproc

  - name: Compile Emacs with 'make -j{{nproc.stdout}}'
    command: make -j{{nproc.stdout}} chdir={{src}}/emacs-{{ver}}

  - name: Install Emacs
    become: yes
    command: make install chdir={{src}}/emacs-{{ver}}

  - name: Add an Emacs daemon systemd unit file
    blockinfile:
      path: '{{ansible_env.HOME}}/.config/systemd/user/emacs.service'
      create: true
      backup: yes
      block: |
        [Unit]
        Description=Emacs text editor
        Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

        [Service]
        Type=simple
        ExecStart=emacs --fg-daemon
        ExecStop=emacsclient --eval "(kill-emacs)"
        Environment=SSH_AUTH_SOCK=%t/keyring/ssh
        Restart=on-failure

        [Install]
        WantedBy=default.target

  - name: Enable Emacs daemon systemd service
    systemd:
      enabled: true
      name: emacs
      user: yes
